FROM python:3.11-slim AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    cmake \
    build-essential \
    pkg-config \
    git \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /build

# Copy requirements
COPY requirements.fast.txt .

# Install and build dependencies with wheels
RUN pip install --upgrade pip wheel && \
    pip wheel --wheel-dir=/wheels \
    --extra-index-url https://www.piwheels.org/simple/ \
    --trusted-host www.piwheels.org \
    --extra-index-url https://abetlen.github.io/llama-cpp-python/whl/cpu \
    -r requirements.fast.txt

# Runtime stage - keeps image small
FROM python:3.11-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    iputils-ping \
    net-tools \
    iproute2 \
    procps \
    dnsutils \
    ca-certificates \
    wakeonlan \
    libgomp1 \
    libomp-dev \
    openssh-client \
    && rm -rf /var/lib/apt/lists/*

# Install Docker CLI for container management
RUN curl -fsSL https://download.docker.com/linux/static/stable/$(uname -m)/docker-20.10.24.tgz | \
    tar -xzf - --strip-components=1 -C /usr/local/bin docker/docker && \
    chmod +x /usr/local/bin/docker

WORKDIR /app

# Copy wheels from builder and install
COPY --from=builder /wheels /wheels
RUN pip install --no-index --find-links=/wheels /wheels/* && \
    rm -rf /wheels

# Create non-root user early
RUN useradd -m -u 1000 agent && \
    groupadd -f -g 990 docker && \
    usermod -aG docker agent

# Set working directory and create necessary directories with proper ownership
WORKDIR /app
RUN mkdir -p /app/agent_memory \
    /app/agent_memory/archived_sessions \
    /app/logs \
    /app/models \
    /app/temp && \
    chown -R agent:agent /app

# Create user cache directory with proper permissions (as root)
RUN mkdir -p /home/agent/.cache/sentence_transformers && \
    mkdir -p /home/agent/.cache/huggingface/hub && \
    chmod -R 755 /home/agent/.cache && \
    chown -R agent:agent /home/agent/.cache

# IMPORTANT: Copy ALL application files
COPY --chown=agent:agent . .

# Copy and set up entrypoint script (as root)
COPY docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Switch to agent user
USER agent

# Set environment variables
ENV PYTHONPATH=/app
ENV FLASK_APP=web_agent.py
ENV FLASK_ENV=production
ENV TRANSFORMERS_CACHE=/home/agent/.cache/huggingface
ENV SENTENCE_TRANSFORMERS_HOME=/home/agent/.cache/sentence_transformers

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Expose port
EXPOSE 5000

# Use custom entrypoint for proper initialization
ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]