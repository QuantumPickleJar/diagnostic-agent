services:
  diagnostic-agent:
    build:
      context: .
      dockerfile: Dockerfile.fast.cross
    image: diagnostic-agent:fast-cross
    container_name: diagnostic-journalist
    restart: unless-stopped
    ports:
      - "0.0.0.0:5000:5000"
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
      - ./temp:/app/temp
      - /var/run/docker.sock:/var/run/docker.sock:rw
    env_file:
      - .env
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - MODEL_CACHE_DIR=/app/models
      - DEV_MACHINE_IP=${DEV_MACHINE_IP}
      - DEV_MACHINE_MAC=${DEV_MACHINE_MAC}
      - DEV_MACHINE_PORT=${DEV_MACHINE_PORT}
      - DEV_MACHINE_USER=${DEV_MACHINE_USER}
      - SSH_TIMEOUT=${SSH_TIMEOUT}
      - SSH_MAX_RETRIES=${SSH_MAX_RETRIES}
      - SSH_RETRY_DELAY=${SSH_RETRY_DELAY}
      - BRIDGE_CHECK_INTERVAL=${BRIDGE_CHECK_INTERVAL}
      - WAKE_ON_LAN_ENABLED=${WAKE_ON_LAN_ENABLED}
      - PI_HOST=${PI_HOST}
      - PI_PORT=${PI_PORT}
      - PI_USER=${PI_USER}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - diagnostic-net

networks:
  diagnostic-net:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-diagnostic
      com.docker.network.bridge.enable_ip_masquerade: 'true'
      com.docker.network.bridge.enable_icc: 'true'
      com.docker.network.driver.mtu: 1500