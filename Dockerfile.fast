# Fast Development Dockerfile - Uses pre-built ARM wheels
FROM python:3.11-slim

WORKDIR /app

# Install minimal system dependencies for fast builds
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    iputils-ping \
    net-tools \
    iproute2 \
    procps \
    dnsutils \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install Docker CLI only (not full Docker engine)
RUN curl -fsSL https://download.docker.com/linux/static/stable/aarch64/docker-20.10.24.tgz | \
    tar -xzf - --strip-components=1 -C /usr/local/bin docker/docker

# Copy requirements for fast install
COPY requirements.fast.txt .

# Install Python dependencies using pre-built wheels when available
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --upgrade pip && \
    # Use piwheels.org for ARM pre-built packages
    pip install --extra-index-url https://www.piwheels.org/simple/ \
    --trusted-host www.piwheels.org \
    -r requirements.fast.txt

# Copy application files
COPY . .

# Create directories and permissions
RUN mkdir -p /app/agent_memory /app/agent_memory/archived_sessions /app/logs && \
    chmod 755 /app/agent_memory /app/logs

# Ensure static_config.json exists
RUN if [ ! -f /app/agent_memory/static_config.json ]; then \
    echo '{"mode":"local","local_model_path":"/app/models/tinyllama.gguf","system_prompt_file":"system_prompt.txt","remote_dev":{"user":"user","ip":"192.168.1.100","port":22},"logging":{"level":"INFO","max_log_size_mb":50,"max_log_days":30},"memory":{"faiss_index_path":"/app/agent_memory/embeddings.faiss","recall_log_path":"/app/agent_memory/recall_log.jsonl"},"system_info":{"hostname":"diagnostic-agent","platform":"raspberry-pi","last_updated":"2025-07-30T00:00:00Z"}}' > /app/agent_memory/static_config.json; \
    fi

# Create non-root user
RUN useradd -m -u 1000 agent && \
    groupadd -f docker && \
    usermod -aG docker agent && \
    chown -R agent:agent /app

USER agent

# Create cache directory
RUN mkdir -p /home/agent/.cache/sentence_transformers

EXPOSE 5000

HEALTHCHECK --interval=30s --timeout=15s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

ENV PYTHONUNBUFFERED=1
ENV FLASK_ENV=development
ENV PYTHONDONTWRITEBYTECODE=1

CMD ["python", "web_agent.py"]
